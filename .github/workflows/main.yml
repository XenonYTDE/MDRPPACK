name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  codingstandards:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: docker pull mcr.microsoft.com/dotnet/core/sdk:3.0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Coding Standards
        run: python tools/coding_standards.py ${{ secrets.BOT_TOKEN }}

  CWTools_CI:
    runs-on: ubuntu-latest
    needs: codingstandards

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pull CWTools Action Validator
        run: wget -O - -q https://raw.githubusercontent.com/cwtools/cwtools-action/v1.0.0/lib/gitlab_setup.sh | sh -s

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: CWTools Build Output
          path: output.json

  styling:
    runs-on: ubuntu-latest
    needs: CWTools_CI

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check Basic Style
        run: python tools/check_basic_style_2.py ${{ secrets.BOT_TOKEN }}

  fixingstyling:
    runs-on: ubuntu-latest
    needs: styling

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Git
        run: sudo apt-get install -y git

      - name: Fix Styling
        run: python tools/fix_styling.py ${{ secrets.BOT_TOKEN }}

      - name: Commit and Push
        run: |
          git config --global user.email "your-email@example.com"
          git config --global user.name "your-gitlab-username"
          git config --global push.default simple
          git remote set-url origin https://${{ secrets.GITLAB_TOKEN }}@gitlab.com/your-project/repo.git
          git add -A
          git commit -m 'Fixed Styling for you'
          git push -u origin HEAD:$GITHUB_REF_NAME

  create_releaseable:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create a Release
        run: |
          curl --location --output /usr/local/bin/release-cli "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-linux-amd64"
          chmod +x /usr/local/bin/release-cli
          release-cli create --tag $GITHUB_REF --description 'Release for $GITHUB_REF from $GITHUB_SHA $GITHUB_EVENT_PATH'
