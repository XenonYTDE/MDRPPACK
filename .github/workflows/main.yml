name: CI

on: [push]

env:
  GAME: "hoi4"
  RULES: "https://github.com/Kaiserreich/cwtools-hoi4-config.git"
  RULES_REF: "master"
  SUPPRESSED_OFFENCE_CATEGORIES: '{"failure":["CW226"],"warning":["CW251"],"notice":[]}'
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: clone
  INPUT_GAME: "hoi4"
  INPUT_RULES: "https://github.com/Kaiserreich/cwtools-hoi4-config.git"
  INPUT_RULESREF: "master"
  INPUT_SUPPRESSEDOFFENCECATEGORIES: '{"failure":["CW226"],"warning":["CW251"],"notice":[]}'
  INPUT_MODPATH: ""
  INPUT_CACHE: ""
  INPUT_VANILLAMODE: "0"
  INPUT_LOCLANGUAGES: "english"
  INPUT_SUPPRESSEDFILES: "[]"
  INPUT_CWTOOLSCLIVERSION: ""

jobs:
  coding-standards:
    runs-on: ubuntu-latest
    if: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install requests
        run: pip install requests
        
      - name: Run coding standards check
        run: python tools/coding_standards.py ${{ secrets.BOT_TOKEN }}
        
  cwtools:
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/dotnet/core/sdk:3.0
    permissions:
      checks: write
      contents: read
      pull-requests: write
    if: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y wget ruby git jq
          
      - name: Run CWTools validator
        run: |
          echo "Pulling down the CWTools action validator"
          wget -O - -q https://raw.githubusercontent.com/cwtools/cwtools-action/v1.0.0/lib/gitlab_setup.sh | sh -s
          
          if [ -f "output.json" ]; then
            echo "CWTools Validation Results:"
            echo "=========================="
            echo "JSON Structure:"
            cat output.json
            echo "=========================="
            echo "Formatted Results:"
            jq -r 'if type == "array" then .[] | "\(.severity): \(.message)"  else empty end' output.json | sort
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_API_V4_URL: ${{ github.api_url }}
          CI_PROJECT_ID: ${{ github.repository_id }}
          CI_COMMIT_SHA: ${{ github.sha }}
          CI_MERGE_REQUEST_IID: ${{ github.event.pull_request.number }}
          
      - name: Upload CWTools results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cwtools-output
          path: output.json

  styling:
    needs: [coding-standards]
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip-coding-pipeline') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install requests
        run: pip install requests
        
      - name: Check styling
        run: python tools/check_basic_style_2.py ${{ secrets.BOT_TOKEN }}

  fix-styling:
    needs: [styling]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install requests
        run: pip install requests
        
      - name: Fix styling
        run: python tools/fix_styling.py ${{ secrets.BOT_TOKEN }}
        
      - name: Configure Git
        run: |
          git config --global user.email "millenniumdawnmod@gmail.com"
          git config --global user.name "millennium_dawn_cwtools"
          
      - name: Commit and push changes
        run: |
          git add -A
          git commit -m 'Fixed Styling for you'
          git push

      - name: Verify styling
        run: |
          python tools/check_basic_style.py ${{ secrets.BOT_TOKEN }}
          python tools/check_basic_style_2.py ${{ secrets.BOT_TOKEN }}

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [coding-standards, cwtools, styling]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Release for ${{ github.ref_name }} from ${{ github.sha }}
            Created at ${{ github.event.repository.updated_at }}