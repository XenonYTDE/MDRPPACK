name: CI

on: [push]

env:
  GAME: "hoi4"
  RULES: "https://github.com/Kaiserreich/cwtools-hoi4-config.git"
  RULES_REF: "master"
  SUPPRESSED_OFFENCE_CATEGORIES: '{"failure":["CW226"],"warning":["CW251"],"notice":[]}'

jobs:
  coding-standards:
    runs-on: ubuntu-latest
    if: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install requests
        run: pip install requests
        
      - name: Run coding standards check
        run: python tools/coding_standards.py ${{ secrets.BOT_TOKEN }}
        
  cwtools:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
    if: true
    steps:
      - uses: actions/checkout@v3
      
      - name: CWTools CI
        uses: cwtools/cwtools-action@v1.0.0
        with:
          game: ${{ env.GAME }}
          rules: ${{ env.RULES }}
          rulesRef: ${{ env.RULES_REF }}
          suppressedOffenceCategories: ${{ env.SUPPRESSED_OFFENCE_CATEGORIES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_STEP_DEBUG: true
          ACTIONS_RUNNER_DEBUG: true
          
      - name: Upload CWTools results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cwtools-output
          path: output.json

  styling:
    needs: [coding-standards]
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip-coding-pipeline') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install requests
        run: pip install requests
        
      - name: Check styling
        run: python tools/check_basic_style_2.py ${{ secrets.BOT_TOKEN }}

  fix-styling:
    needs: [styling]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install requests
        run: pip install requests
        
      - name: Fix styling
        run: python tools/fix_styling.py ${{ secrets.BOT_TOKEN }}
        
      - name: Configure Git
        run: |
          git config --global user.email "millenniumdawnmod@gmail.com"
          git config --global user.name "millennium_dawn_cwtools"
          
      - name: Commit and push changes
        run: |
          git add -A
          git commit -m 'Fixed Styling for you'
          git push

      - name: Verify styling
        run: |
          python tools/check_basic_style.py ${{ secrets.BOT_TOKEN }}
          python tools/check_basic_style_2.py ${{ secrets.BOT_TOKEN }}

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [coding-standards, cwtools, styling]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Release for ${{ github.ref_name }} from ${{ github.sha }}
            Created at ${{ github.event.repository.updated_at }}