on_actions = {
	# Not run on a specific country.
	on_startup = {
		effect = {
			# Remove Microstates from the Game
			if = {
				limit = {
					has_game_rule = {
						rule = remove_micro_states
						option = yes
					}
				}
				ITA = {
					add_state_core = 929
					add_state_core = 948
					annex_country = { target = HLS transfer_troops = yes }
					annex_country = { target = SMA transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = HLS
						remove_core_of = SMA
					}
				}
				SPR = {
					add_state_core = 945
					annex_country = { target = ADO transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = ADO
					}
				}
				FRA = {
					add_state_core = 269
					add_state_core = 270
					add_state_core = 565
					add_state_core = 946
					annex_country = { target = COM transfer_troops = yes }
					annex_country = { target = MNC transfer_troops = yes }
					annex_country = { target = MRT transfer_troops = yes }
					annex_country = { target = SEY transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = COM
						remove_core_of = MNC
						remove_core_of = MRT
						remove_core_of = SEY
					}
				}
				ENG = {
					add_state_core = 863
					add_state_core = 864
					add_state_core = 865
					add_state_core = 866
					add_state_core = 867
					add_state_core = 868
					annex_country = { target = STK transfer_troops = yes }
					annex_country = { target = DMI transfer_troops = yes }
					annex_country = { target = STL transfer_troops = yes }
					annex_country = { target = STV transfer_troops = yes }
					annex_country = { target = GRA transfer_troops = yes }
					annex_country = { target = BAR transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = STK
						remove_core_of = DMI
						remove_core_of = TRI
						remove_core_of = STV
						remove_core_of = STL
						remove_core_of = BAR
					}
				}
				VEN = {
					add_state_core = 869
					annex_country = { target = TRI transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = TRI
					}
				}
				USA = {
					add_state_core = 856
					annex_country = { target = BAH transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = BAH
					}
				}
				MOR = {
					add_state_core = 372
					annex_country = { target = SHA transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = SHA
					}
				}
				RAJ = {
					add_state_core = 480
					annex_country = { target = MLD transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = MLD
					}
				}
				SAM = {
				    add_state_core = 533
					add_state_core = 535
					add_state_core = 543
					add_state_core = 546
					add_state_core = 551
					add_state_core = 568
					add_state_core = 819
					add_state_core = 820
					add_state_core = 821
					add_state_core = 1115
					add_state_core = 1116
					add_state_core = 1117
					annex_country = { target = SOL transfer_troops = yes }
					annex_country = { target = FIJ transfer_troops = yes }
					annex_country = { target = MIC transfer_troops = yes }
					annex_country = { target = PAU transfer_troops = yes }
					annex_country = { target = MAR transfer_troops = yes }
					annex_country = { target = KIR transfer_troops = yes }
					annex_country = { target = TUL transfer_troops = yes }
					annex_country = { target = VAN transfer_troops = yes }
					annex_country = { target = TON transfer_troops = yes }
					annex_country = { target = NAU transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = SOL
						remove_core_of = FIJ
						remove_core_of = MIC
						remove_core_of = PAU
						remove_core_of = MAR
						remove_core_of = KIR
						remove_core_of = TUL
						remove_core_of = VAN
						remove_core_of = TON
						remove_core_of = NAU
					}
				}
				MAY = {
					add_state_core = 752
					annex_country = { target = BRU transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = BRU
					}
				}
				SAF = {
					add_state_core = 271
					add_state_core = 272
					annex_country = { target = SWA transfer_troops = yes }
					annex_country = { target = LES transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = SWA
						remove_core_of = LES
					}
				}
				EGU = {
					add_state_core = 320
					annex_country = { target = SAO transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = SAO
					}
				}
				POR = {
					add_state_core = 398
					annex_country = { target = VER transfer_troops = yes }
					for_each_scope_loop = {
						array = core_states
						remove_core_of = VER
					}
				}
				set_global_flag = GAME_RULE_microstates_removed
			}
			if = {
				limit = {
					has_game_rule = {
						rule = league_of_nations_rule_stab_quarter
						option = USA_STAB
					}
				}
				USA = { set_country_flag = USA_STAB }
			}
			if = {
				limit = {
					has_game_rule = {
						rule = league_of_nations_rule_stab_quarter
						option = SOV_STAB
					}
				}
				SOV = { set_country_flag = SOV_STAB }
			}
			if = {
				limit = {
					has_game_rule = {
						rule = league_of_nations_rule_stab_quarter
						option = ENG_STAB
					}
				}
				ENG = { set_country_flag = ENG_STAB }
			}
			if = {
				limit = {
					has_game_rule = {
						rule = league_of_nations_rule_stab_quarter
						option = FRA_STAB
					}
				}
				FRA = { set_country_flag = FRA_STAB }
			}
			if = {
				limit = {
					has_game_rule = {
						rule = league_of_nations_rule_stab_quarter
						option = CHI_STAB
					}
				}
				CHI = { set_country_flag = CHI_STAB }
			}
			# create LoN
			random_country = {
				limit = {
					is_ai = yes
				}
				set_global_flag = league_of_nations_mod_active
				create_league_of_nations_effect = yes
			}
			# add threat change for Chechen war (only once)
			SOV = {
				if = {
					limit = {
						date < 2000.1.2
						has_war_with = CHE
					}
					set_temp_variable = { threat_value = 10 }
					change_league_of_nations_threat_value = yes
					set_temp_variable = { threat_change = 1 }
					set_league_of_nations_last_threat_static_change = yes
					set_variable = { declared_war_on_target = CHE.id }
				}
			}
			# set flag that reduces threat when annexing a subject
			every_country = {
				every_subject_country = {
					set_country_flag = was_subject_of_@PREV
				}
			}
		}
	}

	# ROOT is attacker, FROM is defender
	on_war_relation_added = {
		effect = {
			# adding flags for being at war with someone (needed for state control change check, since ownership is granted after peace treaty and thus "has_war_with" is not good enough)
			if = {
				limit = {
					any_other_country = {
						has_war_with = ROOT
						NOT = { has_country_flag = has_war_with_@ROOT }
					}
				}
				every_other_country = {
					limit = {
						has_war_with = ROOT
						NOT = { has_country_flag = has_war_with_@ROOT }
					}
					set_country_flag = has_war_with_@ROOT
				}
			}
			if = {
				limit = {
					any_other_country = {
						has_war_with = FROM
						NOT = { has_country_flag = has_war_with_@FROM }
					}
				}
				every_other_country = {
					limit = {
						has_war_with = FROM
						NOT = { has_country_flag = has_war_with_@FROM }
					}
					set_country_flag = has_war_with_@FROM
				}
			}
		}
	}

	# ROOT is country
	on_war = {
		effect = {
			# add threat for joining first offensive war
			if = {
				limit = {
					has_civil_war = no
					has_offensive_war = yes
					NOT = { has_country_flag = we_declared_war }
				}
				set_temp_variable = { threat_value = 10 }
				change_league_of_nations_threat_value = yes
				set_temp_variable = { threat_change = 1 }
				set_league_of_nations_last_threat_static_change = yes
				random_enemy_country = {
					limit = {
						has_defensive_war_with = ROOT
						OR = {
							is_major = yes
							is_faction_leader = yes
							ROOT = {
								NOT = {
									any_enemy_country = {
										OR = {
											is_major = yes
											is_faction_leader = yes
										}
									}
								}
							}
						}
					}
					set_variable = { declared_war_on_target = FROM.id }
				}
			}
		}
	}

	# ROOT is country
	on_peace = {
		effect = {
			clr_country_flag = we_declared_war
			# removing flags for being at war with someone (needed for state control change check, since ownership is granted after peace treaty and thus "has_war_with" is not good enough)
			if = {
				limit = {
					any_other_country = {
						NOT = { has_war_with = ROOT }
						has_country_flag = has_war_with_@ROOT
					}
				}
				every_other_country = {
					limit = {
						NOT = { has_war_with = ROOT }
						has_country_flag = has_war_with_@ROOT
					}
					clr_country_flag = has_war_with_@ROOT
				}
			}
		}
	}

	# ROOT is country
	on_monthly = {
		effect = {
			# Remove trade sanctions / reduce running time of trade sanctions
			if = {
				limit = {
					check_variable = { league_of_nations_trade_sanctions_array^num > 0 }
				}
				for_each_loop = {
					array = league_of_nations_trade_sanctions_array
					if = {
						limit = {
							check_variable = { v > 0 }
						}
						subtract_from_variable = { league_of_nations_trade_sanctions_array^i = 1 }
					}
				}
				remove_league_of_nations_trade_sanction = yes
			}
		}
	}

	# ROOT is country
	on_weekly = {
		effect = {
			# Set weekly threat change value
			set_variable = { league_of_nations_threat_from_war_peace = 0 }
			if = {
				limit = {
					has_war = no
				}
				set_variable = { league_of_nations_threat_from_war_peace = -0.5 }
			}
			else_if = {
				limit = {
					has_defensive_war = yes
					has_civil_war = no
				}
				set_variable = { league_of_nations_threat_from_war_peace = -0.1 }
			}
			set_variable = { league_of_nations_threat_from_offensive_war = 0 }
			if = {
				limit = {
					has_war = no
					any_other_country = {
						has_offensive_war = yes
						meta_trigger = {
							text = {
								has_volunteers_amount_from = {
									tag = [COUNTRY]
									count > 0
								}
							}
							COUNTRY = "[Root.GetTag]"
						}
					}
				}
				set_variable = { league_of_nations_threat_from_offensive_war = 0.75 }
			}
			else_if = {
				limit = {
					has_war = no
					any_other_country = {
						has_defensive_war = yes
						meta_trigger = {
							text = {
								has_volunteers_amount_from = {
									tag = [COUNTRY]
									count > 0
								}
							}
							COUNTRY = "[Root.GetTag]"
						}
					}
				}
				set_variable = { league_of_nations_threat_from_offensive_war = 0.65 }
			}
			if = {
				limit = {
					has_offensive_war = yes
					has_civil_war = no
					any_country = {
						is_league_of_nations_member = yes
						has_defensive_war_with = ROOT
					}
				}
				set_variable = { league_of_nations_threat_from_offensive_war = 0.5 }
			}

			set_variable = { league_of_nations_generated_threat_rate = 0 }
			add_to_variable = { league_of_nations_generated_threat_rate = league_of_nations_threat_from_war_peace }
			add_to_variable = { league_of_nations_generated_threat_rate = league_of_nations_threat_from_offensive_war }

			set_temp_variable = { threat_value = league_of_nations_generated_threat_rate }
			change_league_of_nations_threat_value = yes
		}
	}

	# ROOT is country
	on_daily = {
		effect = {
			# Stuff for the LoN leader
			if = {
				limit = {
					is_league_of_nations_leader = yes
				}
				# Reduce time til voting ends
				if = {
					limit = {
						check_variable = { global.league_of_nations_voting_time > 0 }
					}
					subtract_from_variable = { global.league_of_nations_voting_time = 1 }
				}
				# LoN voting ended
				if = {
					limit = {
						is_league_of_nations_voting_active = yes
						NOT = { has_global_flag = league_of_nations_voting_waiting_for_response }
						OR = {
							check_variable = { global.league_of_nations_voting_time < 1 }
							NOT = { country_exists = var:global.league_of_nations_voting_target }
						}
					}
					country_event = { id = league_of_nations_events.2 }
				}
				# Reduce time til next election
				if = {
					limit = {
						check_variable = { global.days_til_next_league_of_nations_election > 0 }
					}
					subtract_from_variable = { global.days_til_next_league_of_nations_election = 1 }
				}
				# start election
				if = {
					limit = {
						check_variable = { global.days_til_next_league_of_nations_election < 1 }
						NOT = { has_global_flag = league_of_nations_election }
						NOT = { has_global_flag = league_of_nations_voting }
					}
					country_event = { id = OON_election_events.5 }
				}
				# No confidence vote
				if = {
					limit = {
						NOT = { has_global_flag = league_of_nations_election }
						check_variable = { global.days_til_next_league_of_nations_election > 1 }
						set_temp_variable = { num_of_total_members_of_league_of_nation = global.league_of_nations_members_array^num }
						divide_temp_variable = { num_of_total_members_of_league_of_nation = 2 }
						check_variable = { global.num_of_league_of_nations_noconfidence_votes > num_of_total_members_of_league_of_nation }
					}
					set_temp_variable = { election_time = 1 }
					set_league_of_nations_global_election_time = yes
					news_event = { id = league_of_nations_news_events.3 hours = 1 }
					every_country = {
						limit = {
							is_ai = yes
							is_league_of_nations_member = yes
						}
						set_league_of_nations_AI_election_targets = yes
					}
				}
			}
		}
	}

	# ROOT is subject, FROM is overlord
	on_subject_annexed = {
		effect = {
			# clear flag that reduces threat when annexing a subject
			clr_country_flag = was_subject_of_@FROM
		}
	}

	# ROOT is subject, FROM is previous overlord
	on_subject_free = {
		effect = {
			# clear flag that reduces threat when annexing a subject
			clr_country_flag = was_subject_of_@FROM
		}
	}

	# ROOT is free nation, FROM is releaser
	on_release_as_free = {
		effect = {
			# clear flag that reduces threat when annexing a subject
			clr_country_flag = was_subject_of_@FROM
		}
	}

	# ROOT is subject, FROM is overlord
	on_subject_autonomy_level_change = {
		effect = {
			# set flag that reduces threat when annexing a subject
			set_country_flag = was_subject_of_@FROM
		}
	}

	# ROOT is subject, FROM is overlord
	on_puppet = {
		effect = {
			# set flag that reduces threat when annexing a subject
			set_country_flag = was_subject_of_@FROM
		}
	}

	# ROOT is subject, FROM is overlord
	on_release_as_puppet = {
		effect = {
			# set flag that reduces threat when annexing a subject
			set_country_flag = was_subject_of_@FROM
		}
	}

	# ROOT is winner, FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			FROM = {
				force_remove_league_of_nations_trade_sanction = yes
				# effects for if LoN leader is annexed
				if = {
					limit = {
						is_league_of_nations_leader = yes
					}
					unset_league_of_nations_leader = yes
					remove_from_league_of_nations = yes
					if = {
						limit = {
							any_other_country = {
								is_league_of_nations_member = yes
								exists = yes
								has_capitulated = no
							}
						}
						random_other_country = {
							limit = {
								is_league_of_nations_member = yes
								exists = yes
								has_capitulated = no
							}
							set_league_of_nations_leader = yes
							news_event = { id = league_of_nations_news_events.1 }
						}
						set_temp_variable = { election_time = 1 }
						set_league_of_nations_global_election_time = yes
						every_country = {
							limit = {
								is_ai = yes
								is_league_of_nations_member = yes
							}
							set_league_of_nations_AI_election_targets = yes
						}
					}
					else = {
						set_global_flag = league_of_nations_dissolved
						every_country = {
							limit = {
								is_league_of_nations_member = yes
							}
							remove_from_league_of_nations = yes
							set_temp_variable = { threat_value = 0 }
							set_league_of_nations_threat_value = yes
						}
						ROOT = {
							news_event = { id = league_of_nations_news_events.7 }
						}
					}
				}
				# leave LoN when annexed
				if = {
					limit = {
						is_league_of_nations_member = yes
					}
					remove_from_league_of_nations = yes
				}

				# add threat for annexation
				if = {
					limit = {
						OR = {
							has_country_flag = civil_war_small_aggressiveness_penalty_for_annexing
							original_tag = FROM
							FROM = { original_tag = ROOT }
						}
					}
					clr_country_flag = civil_war_small_aggressiveness_penalty_for_annexing
					set_temp_variable = { threat_value = 5 }
					set_variable = { league_of_nations_threat_from_annexation = threat_value }
					change_league_of_nations_threat_value = yes
					set_temp_variable = { threat_change = 7 }
					set_league_of_nations_last_threat_static_change = yes
				}
				else = {
					# base threat +15
					set_temp_variable = { threat_value = 15 }
					if = {
						limit = {
							FROM = { has_country_flag = was_subject_of_@ROOT }
						}
						FROM = { clr_country_flag = was_subject_of_@ROOT }
						# only 10 threat for annexing subjects
						set_temp_variable = { threat_value = 10 }
						if = {
							limit = {
								FROM = {
									OR = {
										has_country_flag = CHI_integrate_the_administration
										tag = GXC
										tag = YUN
										tag = SHX
										tag = XSM
										tag = SIK
									}
								}
								NOT = { has_country_flag = we_already_warlord_annexed_@FROM }
							}
							set_country_flag = we_already_warlord_annexed_@FROM
							# only 5 threat when annexing warlord subjects
							set_temp_variable = { threat_value = 5 }
						}
					}
					set_variable = { league_of_nations_threat_from_annexation = threat_value }
					change_league_of_nations_threat_value = yes
					set_temp_variable = { threat_change = 2 }
					set_league_of_nations_last_threat_static_change = yes
					set_variable = { last_annexed_country = FROM.id }
				}
			}
		}
	}

	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			# effects when LoN leader capitulates
			if = {
				limit = {
					is_league_of_nations_leader = yes
				}
				# make an election happen in 1 day, if any country could be elected
				if = {
					limit = {
						any_other_country = {
							is_league_of_nations_member = yes
							exists = yes
							has_capitulated = no
						}
					}
					set_temp_variable = { election_time = 1 }
					set_league_of_nations_global_election_time = yes
					set_league_of_nations_AI_election_targets = yes
				}
				# else dissolve LoN
				else = {
					set_global_flag = league_of_nations_dissolved
					every_country = {
						limit = {
							is_league_of_nations_member = yes
						}
						remove_from_league_of_nations = yes
						set_temp_variable = { threat_value = 0 }
						set_league_of_nations_threat_value = yes
					}
					FROM = {
						news_event = { id = league_of_nations_news_events.7 }
					}
				}
			}
			# reduce threat because of capitulating
			set_temp_variable = { threat_value = -50 }
			change_league_of_nations_threat_value = yes
			set_temp_variable = { threat_change = 4 }
			set_league_of_nations_last_threat_static_change = yes
		}
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			# set threat to 0, if lost the war
			if = {
				limit = {
					has_war = no
				}
				set_temp_variable = { threat_value = 0 }
				set_league_of_nations_threat_value = yes
				set_temp_variable = { threat_change = 5 }
				set_league_of_nations_last_threat_static_change = yes
			}
		}
	}

	# ROOT is winner, FROM gets annexed - This will also fire on_annex
	on_civil_war_end_before_annexation = {
		effect = {
			set_country_flag = civil_war_small_aggressiveness_penalty_for_annexing
		}
	}

	on_civil_war_end = {
		effect = {
			# join the LoN if enemy in civil war (former country) was a member
			if = {
				limit = {
					FROM = { is_league_of_nations_member = yes }
				}
				add_to_league_of_nations = yes
			}
		}
	}

	# ROOT declared war, FROM is war target
	on_declare_war = {
		effect = {
			hidden_effect = {
				# Winter War voting:
				if = {
					limit = {
						NOT = { has_global_flag = SOV_FIN_voting_happened }
						NOT = { has_global_flag = SOV_FIN_voting_in_queue }
						is_historical_focus_on = yes
						tag = SOV
						FROM = {
							tag = FIN
							is_league_of_nations_member = yes
						}
					}
					if = {
						limit = {
							NOT = { is_league_of_nations_voting_active = yes }
							NOT = { is_league_of_nations_election_active = yes }
							OR = {
								check_variable = { global.days_til_next_league_of_nations_election > 70 }
							}
						}
						set_global_flag = SOV_FIN_voting_in_queue
						FIN = {
							country_event = { id = league_of_nations_events.7 }
						}
					}
					else = {
						set_global_flag = SOV_FIN_voting_in_queue
					}
				}
				# add threat for declaring war
				if = {
					limit = {
						has_civil_war = no
					}
					set_country_flag = we_declared_war
					set_temp_variable = { threat_value = 10 }
					change_league_of_nations_threat_value = yes
					set_temp_variable = { threat_change = 1 }
					set_league_of_nations_last_threat_static_change = yes
					set_variable = { declared_war_on_target = FROM.id }
				}
			}
			# call LoN coalition to war
			if = {
				limit = {
					has_idea = league_of_nations_defense_pact_target
					FROM = {
						is_league_of_nations_member = yes
					}
					any_other_country = {
						is_league_of_nations_member = yes
						NOT = { tag = FROM }
						NOT = { has_war_with = ROOT }
					}
				}
				FROM = {
					country_event = { id = league_of_nations_events.9 }
				}
			}
		}
	}

	# ROOT is nation being puppeted, FROM is overlord - used when puppeting in a peace conference
	on_puppet = {
		effect = {
			# add threat for puppeting
			FROM = {
				set_temp_variable = { threat_value = 5 }
				change_league_of_nations_threat_value = yes
				set_temp_variable = { threat_change = 3 }
				set_league_of_nations_last_threat_static_change = yes
			}
		}
	}

	# ROOT is free nation, FROM is releaser
	on_release_as_free = {
		effect = {
			# reduce threat for releasing
			FROM = {
				set_temp_variable = { threat_value = -5 }
				change_league_of_nations_threat_value = yes
				set_temp_variable = { threat_change = 6 }
				set_league_of_nations_last_threat_static_change = yes
			}
		}
	}

	# ROOT is winner, FROM is loser
	on_peaceconference_ended = {
		effect = {
			# add threat for only annexing states in peace conference
			if = {
				limit = {
					NOT = { has_country_flag = civil_war_small_aggressiveness_penalty_for_annexing }
					NOT = { original_tag = FROM }
					FROM = {
						NOT = { original_tag = ROOT }
					}
					any_owned_state = {
						NOT = { has_state_flag = annexed_by_@ROOT }
						pc_is_state_claimed_by = ROOT
					}
				}
				set_variable = { league_of_nations_threat_from_state_annexations = 0 }
				every_owned_state = {
					limit = {
						NOT = { has_state_flag = annexed_by_@ROOT }
						pc_is_state_claimed_by = ROOT
					}
					set_state_flag = annexed_by_@ROOT
					set_state_flag = { flag = recently_annexed_state days = 62 value = 1 }
					ROOT = {
						set_temp_variable = { threat_value = 2 }
						change_league_of_nations_threat_value = yes
						add_to_variable = { league_of_nations_threat_from_state_annexations = 2 }
					}
					set_variable = { previous_owner = FROM.id }
				}
				if = {
					limit = {
						country_exists = FROM
					}
					set_temp_variable = { threat_change = 8 }
					set_league_of_nations_last_threat_static_change = yes
				}
				else = {
					add_to_variable = { league_of_nations_threat_from_annexation = league_of_nations_threat_from_state_annexations }
				}
			}
			# removing flags for being at war with someone (needed for state control change check, since ownership is granted after peace treaty and thus "has_war_with" is not good enough)
			if = {
				limit = {
					any_other_country = {
						NOT = { has_war_with = ROOT }
						has_country_flag = has_war_with_@ROOT
					}
				}
				every_other_country = {
					limit = {
						NOT = { has_war_with = ROOT }
						has_country_flag = has_war_with_@ROOT
					}
					clr_country_flag = has_war_with_@ROOT
				}
			}
			if = {
				limit = {
					any_other_country = {
						NOT = { has_war_with = FROM }
						has_country_flag = has_war_with_@FROM
					}
				}
				every_other_country = {
					limit = {
						NOT = { has_war_with = FROM }
						has_country_flag = has_war_with_@FROM
					}
					clr_country_flag = has_war_with_@FROM
				}
			}
		}
	}

	# ROOT is sender, FROM is target
	on_generate_wargoal = {
		effect = {
			# add threat for generating war goal
			add_to_temp_variable = { threat_value = 3 }
			change_league_of_nations_threat_value = yes
			set_temp_variable = { threat_change = 9 }
			set_league_of_nations_last_threat_static_change = yes
		}
	}

	# ROOT is new controller, FROM is old controller, FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			# add threat when annexing a state while at peace (e.g. Memel)
			if = {
				limit = {
					NOT = { has_war_with = FROM }
					FROM.FROM = {
						is_owned_by = ROOT
						NOT = { is_core_of = ROOT }
					}
					FROM = {
						NOT = { has_country_flag = has_war_with_@ROOT }
						NOT = { is_subject_of = ROOT }
					}
				}
				set_temp_variable = { previous_owner_of_peacefully_annexed_state = FROM.id }
				FROM.FROM = {
					set_state_flag = annexed_by_@ROOT
					set_state_flag = { flag = recently_annexed_state days = 62 value = 1 }
					set_variable = { previous_owner = previous_owner_of_peacefully_annexed_state }
				}
				FROM = {
					save_event_target_as = old_state_owner
				}
				country_event = { id = league_of_nations_events.15 hours = 1 }
			}
		}
	}

	# ROOT is country that dropped the nuke, FROM is the state the nuke was dropped on
	on_nuke_drop = {
		effect = {
			if = {
				limit = {
					FROM = {
						CONTROLLER = {
							has_offensive_war_with = ROOT
						}
					}
				}
				set_variable = { league_of_nations_threat_from_dropping_nuke = 7.5 }
			}
			else = {
				set_variable = { league_of_nations_threat_from_dropping_nuke = 15 }
			}
			set_temp_variable = { threat_value = league_of_nations_threat_from_dropping_nuke }
			change_league_of_nations_threat_value = yes
			set_temp_variable = { threat_change = 13 }
			set_league_of_nations_last_threat_static_change = yes

			if = {
				limit = {
					league_of_nations_exists = yes
					is_not_league_of_nations_leader = yes
					FROM = {
						is_capital = yes
						is_controlled_by = OWNER
						OWNER = {
							is_league_of_nations_leader = yes
						}
					}
					NOT = { has_country_flag = lon_achievement_what_are_you_gonna_do }
				}
				set_country_flag = lon_achievement_what_are_you_gonna_do
			}
		}
	}
}