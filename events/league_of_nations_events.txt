add_namespace = league_of_nations_events

# Remove ideas when being removed as League of Nations leader
country_event = {
	id = league_of_nations_events.0
	title = league_of_nations_events.EVTNAME0
	desc = league_of_nations_events.EVTDESC0
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			remove_ideas = league_of_nations_leader_idea
		}
	}

	option = {
		name = league_of_nations_events0.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events0.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Remove ideas when leaving League of Nations
country_event = {
	id = league_of_nations_events.1
	title = league_of_nations_events.EVTNAME1
	desc = league_of_nations_events.EVTDESC1
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			remove_ideas = league_of_nations_lon_member_idea
		}
	}

	option = {
		name = league_of_nations_events1.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events1.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# League of Nations Voting ended
country_event = {
	id = league_of_nations_events.2
	title = league_of_nations_events.EVTNAME2
	desc = league_of_nations_events.EVTDESC2
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			end_league_of_nations_voting = yes
		}
	}

	option = {
		name = league_of_nations_events2.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events2.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Election of League of Nations
country_event = {
	id = league_of_nations_events.3
	title = league_of_nations_events.EVTNAME3
	desc = league_of_nations_events.EVTDESC3
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_global_flag = league_of_nations_election
			save_event_target_as = league_of_nations_election_winner
			if = {
				limit = {
					OR = {
						exists = no
						has_capitulated = yes
					}
				}
				random_country = {
					limit = {
						is_league_of_nations_member = yes
						exists = yes
						has_capitulated = no
					}
					save_event_target_as = league_of_nations_election_winner
				}
			}
			random_country = {
				limit = {
					is_league_of_nations_member = yes
					exists = yes
					has_capitulated = no
					NOT = {
						any_other_country = {
							is_league_of_nations_member = yes
							exists = yes
							has_capitulated = no
							check_variable = { num_of_votes_for_lon_election > PREV.num_of_votes_for_lon_election }
						}
					}
				}
				save_event_target_as = league_of_nations_election_winner
			}
			every_country = {
				limit = {
					has_league_of_nations_noconfidence_vote = yes
				}
				remove_league_of_nations_noconfidence_vote = yes
			}
			set_variable = { global.num_of_league_of_nations_noconfidence_votes = 0 }
			if = {
				limit = {
					has_country_flag = new_leader_of_league_of_nations_becomes_major
				}
				clr_country_flag = new_leader_of_league_of_nations_becomes_major
				if = {
					limit = {
						is_major = yes
					}
					set_major = no
				}
			}
			hidden_effect = {
				set_temp_variable = { election_time = 999999 }
				set_league_of_nations_global_election_time = yes
				event_target:league_of_nations_election_winner = {
					set_league_of_nations_leader = yes
					add_to_variable = { num_of_won_league_of_nations_elections = 1 }
					if = {
						limit = {
							is_major = no
						}
						set_country_flag = new_leader_of_league_of_nations_becomes_major
						set_major = yes
					}
					news_event = { id = league_of_nations_news_events.1 }
					set_country_flag = lon_achievement_winner_winner_chicken_dinner
				}
				set_variable = { global.last_lon_election_date = global.date }
				clr_global_flag = league_of_nations_election
			}
		}
	}

	option = {
		name = league_of_nations_events3.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events3.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Historical voting: German Anschluss of Austria
country_event = {
	id = league_of_nations_events.4
	title = league_of_nations_events.EVTNAME4
	desc = league_of_nations_events.EVTDESC4
	picture = GFX_lon_event_picture

	hidden = yes
	fire_only_once = yes
	is_triggered_only = yes

	trigger = {
		tag = MEX
		has_global_flag = GER_anschluss_voting_in_queue
		NOT = { has_global_flag = GER_anschluss_voting_happened }
	}

	immediate = {
		hidden_effect = {
			GER = {
				set_temp_variable = { threat_change = 2 }
				set_league_of_nations_last_threat_static_change = yes
				set_variable = { last_annexed_country = AUS.id }
				ROOT = {
					start_league_of_nations_voting_against_prev = yes
				}
			}
			set_global_flag = GER_anschluss_voting_happened
			clr_global_flag = GER_anschluss_voting_in_queue
		}
	}

	option = {
		name = league_of_nations_events4.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events4.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Fire voting for Anschluss if it wasn't possible immediatly
country_event = {
	id = league_of_nations_events.5
	title = league_of_nations_events.EVTNAME5
	desc = league_of_nations_events.EVTDESC5
	picture = GFX_lon_event_picture

	hidden = yes
	fire_only_once = yes

	trigger = {
		is_league_of_nations_leader = yes
		has_global_flag = GER_anschluss_voting_in_queue
		OR = {
			AND = {
				NOT = { has_global_flag = GER_anschluss_voting_happened }
				country_exists = GER
				country_exists = MEX
				NOT = { is_league_of_nations_voting_active = yes }
				NOT = { is_league_of_nations_election_active = yes }
				MEX = { is_league_of_nations_member = yes }
			}
			has_global_flag = GER_anschluss_voting_happened
			NOT = { country_exists = GER }
			NOT = { country_exists = MEX }
			MEX = {
				NOT = { is_league_of_nations_member = yes }
			}
		}
	}

	mean_time_to_happen = {
		days = 2
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					NOT = { has_global_flag = GER_anschluss_voting_happened }
					country_exists = GER
					country_exists = MEX
					NOT = { is_league_of_nations_voting_active = yes }
					NOT = { is_league_of_nations_election_active = yes }
					MEX = { is_league_of_nations_member = yes }
				}
				MEX = {
					country_event = { id = league_of_nations_events.4 }
				}
			}
			else = {
				clr_global_flag = GER_anschluss_voting_in_queue
			}
		}
	}

	option = {
		name = league_of_nations_events5.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events5.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Voting successful: Back down or accept sanctions?
country_event = {
	id = league_of_nations_events.6
	title = league_of_nations_events.EVTNAME6
	desc = league_of_nations_events.EVTDESC6
	picture = GFX_lon_event_picture

	is_triggered_only = yes

	timeout_days = 5

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					check_variable = { global.league_of_nations_voting_type = 2 }
					has_variable = global.league_of_nations_voting_junior_target
					has_war_with = var:global.league_of_nations_voting_junior_target
				}
				var:global.league_of_nations_voting_junior_target = {
					save_event_target_as = peace_target
				}
			}
			else_if = {
				limit = {
					check_variable = { global.league_of_nations_voting_type = 3 }
					has_variable = global.league_of_nations_voting_junior_target
					NOT = { country_exists = var:global.league_of_nations_voting_junior_target }
				}
				var:global.league_of_nations_voting_junior_target = {
					save_event_target_as = release_target
				}
			}
		}
	}

	option = {
		name = league_of_nations_events6.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events6.EVTOPT1 executed"
		ai_chance = {
			base = 0.5
			modifier = {
				factor = 1.1
				is_major = yes
			}
			modifier = {
				factor = 1.5
				OR = {
					has_government = fascism
					has_government = communism
				}
			}
			modifier = {
				factor = 2
				check_variable = { global.league_of_nations_voting_type = 2 }
				any_war_score > 25
			}
			modifier = {
				factor = 2.5
				check_variable = { global.league_of_nations_voting_type = 2 }
				any_war_score > 50
			}
			modifier = {
				factor = 2
				check_variable = { global.league_of_nations_voting_type = 2 }
				tag = ITA
				has_variable = declared_war_on_target
				var:declared_war_on_target = {
					tag = ETH
				}
			}
			modifier = {
				factor = 1.25
				check_variable = { global.league_of_nations_voting_type = 2 }
				tag = SOV
				has_variable = declared_war_on_target
				var:declared_war_on_target = {
					tag = FIN
				}
			}
			modifier = {
				factor = 3
				check_variable = { global.league_of_nations_voting_type = 3 }
				tag = GER
				has_variable = last_annexed_country
				var:last_annexed_country = {
					tag = AUS
				}
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_type = 3 }
				has_variable = last_annexed_country
				var:last_annexed_country = {
					any_core_state = {
						is_owned_by = ROOT
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_type = 3 }
				has_variable = last_annexed_country
				var:last_annexed_country = {
				}
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_type = 4 }
				any_owned_state = {
					has_state_flag = states_to_give_back_in_league_of_nations_voting
					is_claimed_by = ROOT
					NOT = { is_core_of = ROOT }
				}
			}
			modifier = {
				factor = 2
				check_variable = { global.league_of_nations_voting_type = 4 }
				any_owned_state = {
					has_state_flag = states_to_give_back_in_league_of_nations_voting
					is_core_of = ROOT
				}
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_type = 5 }
				num_of_nukes > 10
			}
		}

		set_temp_variable = { threat_value = 7 }
		change_league_of_nations_threat_value = yes
		set_temp_variable = { threat_change = 11 }
		set_league_of_nations_last_threat_static_change = yes
		if = {
			limit = {
				check_variable = { global.league_of_nations_voting_sanction_type = 1 }
			}
			add_league_of_nations_trade_sanction = yes
			hidden_effect = { news_event = { id = league_of_nations_news_events.12 } }
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_sanction_type = 2 }
			}
			for_each_scope_loop = {
				array = global.league_of_nations_members_array
				tooltip = EVERY_LEAGUE_OF_NATIONS_MEMBER_SCOPE
				create_wargoal = {
					type = liberate_wargoal
					target = PREV
					expire = 185
				}
			}
			hidden_effect = { news_event = { id = league_of_nations_news_events.13 } }
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_sanction_type = 3 }
			}
			remove_from_league_of_nations = yes
			hidden_effect = { news_event = { id = league_of_nations_news_events.14 } }
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_sanction_type = 4 }
			}
			custom_effect_tooltip = ALL_LEAGUE_OF_NATIONS_FORM_COALITION_AGAINST_THIS
			hidden_effect = {
				add_timed_idea = {
					idea = league_of_nations_defense_pact_target
					days = 182
				}
			}
			hidden_effect = { news_event = { id = league_of_nations_news_events.15 } }
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_sanction_type = 5 }
			}
			add_timed_idea = {
				idea = league_of_nations_luxury_goods_embargo_idea
				days = 105
			}
			hidden_effect = { news_event = { id = league_of_nations_news_events.16 } }
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_sanction_type = 6 }
			}
			add_timed_idea = {
				idea = league_of_nations_economic_sanctions_idea
				days = 75
			}
			hidden_effect = { news_event = { id = league_of_nations_news_events.17 } }
		}
		hidden_effect = { news_event = { id = league_of_nations_news_events.10 } }
		hidden_effect = {
			set_temp_variable = { cooldown_time = 100 }
			set_league_of_nations_cooldown_til_next_voting_against_this = yes
			clear_flags_and_vars_after_league_of_nations_voting = yes
		}
	}

	option = {
		name = league_of_nations_events6.EVTOPT2
		log = "[GetDateText]: [This.GetName]: league_of_nations_events6.EVTOPT2 executed"
		trigger = {
			OR = {
				AND = {
					NOT = { check_variable = { global.league_of_nations_voting_type = 2 } }
					NOT = { check_variable = { global.league_of_nations_voting_type = 3 } }
					NOT = { check_variable = { global.league_of_nations_voting_type = 4 } }
				}
				AND = {
					check_variable = { global.league_of_nations_voting_type = 2 }
					has_event_target = peace_target
					has_war_with = event_target:peace_target
				}
				AND = {
					check_variable = { global.league_of_nations_voting_type = 3 }
					has_event_target = release_target
					NOT = { country_exists = event_target:release_target }
				}
				AND = {
					check_variable = { global.league_of_nations_voting_type = 4 }
					any_owned_state = {
						has_state_flag = states_to_give_back_in_league_of_nations_voting
						has_variable = previous_owner
					}
				}
			}
		}

		ai_chance = {
			base = 0.5
			modifier = {
				factor = 2
				has_government = democratic
			}
			modifier = {
				factor = 1.25
				has_government = neutrality
			}
			modifier = {
				factor = 1.25
				is_major = no
				is_faction_leader = no
			}
			modifier = {
				factor = 2
				check_variable = { global.league_of_nations_voting_type = 2 }
				any_war_score < -25
			}
			modifier = {
				factor = 2
				check_variable = { global.league_of_nations_voting_type = 5 }
				num_of_nukes < 2
			}
			modifier = {
				factor = 2
				check_variable = { global.league_of_nations_voting_sanction_type = 2 }
			}
			modifier = {
				factor = 1.1
				check_variable = { global.league_of_nations_voting_sanction_type = 3 }
				OR = {
					has_government = democratic
					has_government = neutrality
				}
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_sanction_type = 4 }
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_sanction_type = 5 }
				has_war_support < 0.5
			}
			modifier = {
				factor = 1.5
				check_variable = { global.league_of_nations_voting_sanction_type = 6 }
				has_stability < 0.5
			}
		}

		set_temp_variable = { threat_value = -7 }
		change_league_of_nations_threat_value = yes
		set_temp_variable = { threat_change = 10 }
		set_league_of_nations_last_threat_static_change = yes
		if = {
			limit = {
				check_variable = { global.league_of_nations_voting_type = 2 }
			}
			if = {
				limit = {
					has_event_target = peace_target
					has_war_with = event_target:peace_target
				}
				white_peace = event_target:peace_target
			}
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_type = 3 }
			}
			if = {
				limit = {
					has_event_target = release_target
					NOT = { country_exists = event_target:release_target }
				}
				release = event_target:release_target
			}
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_type = 4 }
			}
			if = {
				limit = {
					any_owned_state = {
						has_state_flag = states_to_give_back_in_league_of_nations_voting
						has_variable = previous_owner
					}
				}
				every_owned_state = {
					limit = {
						has_state_flag = states_to_give_back_in_league_of_nations_voting
						has_variable = previous_owner
					}
					transfer_state_to = var:previous_owner
					clr_state_flag = annexed_by_@ROOT
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { global.league_of_nations_voting_type = 5 }
			}
			set_temp_variable = { nukes_to_remove = num_of_nukes }
			multiply_temp_variable = { nukes_to_remove = -1 }
			add_nuclear_bombs = nukes_to_remove
			custom_effect_tooltip = LEAGUE_OF_NATIONS_DISALLOWED_TO_PRODUCE_NUKES_FOR_31_DAYS
			hidden_effect = {
				add_timed_idea = {
					idea = league_of_nations_give_up_nukes_idea
					days = 31
				}
			}
		}
		for_each_scope_loop = {
			array = global.league_of_nations_members_array
			tooltip = EVERY_LEAGUE_OF_NATIONS_MEMBER_SCOPE
			add_opinion_modifier = {
				target = ROOT
				modifier = league_of_nations_accepted_ultimatum
			}
		}
		hidden_effect = {
			news_event = { id = league_of_nations_news_events.9 }
			set_temp_variable = { cooldown_time = 150 }
			set_league_of_nations_cooldown_til_next_voting_against_this = yes
			clear_flags_and_vars_after_league_of_nations_voting = yes
		}
	}
}

# Historical voting: Winter War
country_event = {
	id = league_of_nations_events.7
	title = league_of_nations_events.EVTNAME7
	desc = league_of_nations_events.EVTDESC7
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	trigger = {
		tag = FIN
		has_global_flag = SOV_FIN_voting_in_queue
		NOT = { has_global_flag = SOV_FIN_voting_happened }
	}

	immediate = {
		hidden_effect = {
			SOV = {
				set_temp_variable = { threat_change = 1 }
				set_league_of_nations_last_threat_static_change = yes
				set_variable = { declared_war_on_target = ROOT.id }
				ROOT = {
					start_league_of_nations_voting_against_prev = yes
				}
			}
			set_global_flag = SOV_FIN_voting_happened
			clr_global_flag = SOV_FIN_voting_in_queue
		}
	}

	option = {
		name = league_of_nations_events7.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events7.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Fire voting for Winter War if it wasn't possible immediatly
country_event = {
	id = league_of_nations_events.8
	title = league_of_nations_events.EVTNAME8
	desc = league_of_nations_events.EVTDESC8
	picture = GFX_lon_event_picture

	hidden = yes
	fire_only_once = yes

	trigger = {
		is_league_of_nations_leader = yes
		has_global_flag = SOV_FIN_voting_in_queue
		OR = {
			AND = {
				NOT = { has_global_flag = SOV_FIN_voting_happened }
				country_exists = SOV
				country_exists = FIN
				NOT = { is_league_of_nations_voting_active = yes }
				NOT = { is_league_of_nations_election_active = yes }
				FIN = { is_league_of_nations_member = yes }
			}
			has_global_flag = SOV_FIN_voting_happened
			NOT = { country_exists = SOV }
			NOT = { country_exists = FIN }
			FIN = {
				NOT = { is_league_of_nations_member = yes }
			}
		}
	}

	mean_time_to_happen = {
		days = 2
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					NOT = { has_global_flag = SOV_FIN_voting_happened }
					country_exists = SOV
					country_exists = FIN
					NOT = { is_league_of_nations_voting_active = yes }
					NOT = { is_league_of_nations_election_active = yes }
					FIN = { is_league_of_nations_member = yes }
				}
				FIN = {
					country_event = { id = league_of_nations_events.7 }
				}
			}
			else = {
				clr_global_flag = SOV_FIN_voting_in_queue
			}
		}
	}

	option = {
		name = league_of_nations_events8.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events8.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Trigger call to arms of members of League of Nations
country_event = {
	id = league_of_nations_events.9
	title = league_of_nations_events.EVTNAME9
	desc = league_of_nations_events.EVTDESC9
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			FROM = {
				save_event_target_as = attacker_of_league_of_nations
			}
			every_other_country = {
				limit = {
					is_league_of_nations_member = yes
					NOT = { tag = FROM }
					NOT = { has_war_with = FROM }
				}
				country_event = { id = league_of_nations_events.10 hours = 3 }
			}
		}
	}

	option = {
		name = league_of_nations_events9.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events9.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# [From.GetName] Calls League of Nations Members to War
country_event = {
	id = league_of_nations_events.10
	title = league_of_nations_events.EVTNAME10
	desc = league_of_nations_events.EVTDESC10
	picture = GFX_report_event_soviet_tanks

	is_triggered_only = yes

	option = {
		name = league_of_nations_events10.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events10.EVTOPT1 executed"
		ai_chance = {
			factor = 1

			modifier = {
				factor = 0
				event_target:attacker_of_league_of_nations = {
					OR = {
						is_in_faction_with = ROOT
						AND = {
							has_government = ROOT
							has_opinion = {
								target = ROOT
								value > 0
							}
						}
					}
				}
			}
		}

		add_to_war = {
			targeted_alliance = FROM
			enemy = event_target:attacker_of_league_of_nations
			hostility_reason = ally
		}
	}

	option = {
		name = league_of_nations_events10.EVTOPT2
		log = "[GetDateText]: [This.GetName]: league_of_nations_events10.EVTOPT2 executed"
		ai_chance = {
			factor = 0

			modifier = {
				add = 1000
				event_target:attacker_of_league_of_nations = {
					OR = {
						is_in_faction_with = ROOT
						AND = {
							has_government = ROOT
							has_opinion = {
								target = ROOT
								value > 0
							}
						}
					}
				}
			}
		}

		add_stability = -0.25
	}
}

# FROM invited ROOT into League of Nations
country_event = {
	id = league_of_nations_events.11
	title = league_of_nations_events.EVTNAME11
	desc = league_of_nations_events.EVTDESC11
	picture = GFX_lon_event_picture

	is_triggered_only = yes

	option = {
		name = league_of_nations_events11.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events11.EVTOPT1 executed"
		add_to_league_of_nations = yes
	}
}

# League of Nations: Join alliance?
country_event = {
	id = league_of_nations_events.12
	title = league_of_nations_events.EVTNAME12
	desc = league_of_nations_events.EVTDESC12
	picture = GFX_lon_event_picture

	is_triggered_only = yes

	option = {
		name = league_of_nations_events12.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events12.EVTOPT1 executed"
		ai_chance = {
			factor = 0.75

			modifier = {
				is_faction_leader = yes
				factor = 0.25
			}
			modifier = {
				is_in_faction = no
				OR = {
					is_subject = no
					is_subject_of = FROM
				}
				factor = 6
			}
			modifier = {
				NOT = { has_government = FROM }
				NOT = { has_government = neutrality }
				factor = 0.1
			}
		}

		FROM = {
			add_to_faction = ROOT
		}
	}

	option = {
		name = league_of_nations_events12.EVTOPT2
		log = "[GetDateText]: [This.GetName]: league_of_nations_events12.EVTOPT2 executed"
		ai_chance = {
			factor = 0.25

			modifier = {
				is_in_faction = yes
				factor = 2
			}
			modifier = {
				is_subject = yes
				NOT = { is_subject_of = FROM }
				factor = 10
			}
		}

		FROM = {
			add_opinion_modifier = {
				target = ROOT
				modifier = rejected_to_join_league_of_nations_alliance
			}
		}
	}
}

# League of Nations: Accept "One Nation"?
country_event = {
	id = league_of_nations_events.13
	title = league_of_nations_events.EVTNAME13
	desc = league_of_nations_events.EVTDESC13
	picture = GFX_lon_event_picture

	is_triggered_only = yes

	option = {
		name = league_of_nations_events13.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events13.EVTOPT1 executed"
		ai_chance = {
			factor = 0.75

			modifier = {
				is_puppet = no
				is_subject_of = FROM
				factor = 5
			}
			modifier = {
				is_puppet_of = FROM
				factor = 10
			}
			modifier = {
				has_government = FROM
				factor = 2
			}
			modifier = {
				is_in_faction_with = FROM
				FROM = { is_faction_leader = yes }
				factor = 3
			}
			modifier = {
				is_faction_leader = no
				is_in_faction_with = FROM
				FROM = { is_faction_leader = no }
				factor = 1.5
			}
		}

		every_owned_state = {
			limit = {
				NOT = { is_core_of = FROM }
			}
			add_core_of = FROM
		}
		FROM = {
			annex_country = { target = ROOT transfer_troops = no }
		}
	}

	option = {
		name = league_of_nations_events13.EVTOPT2
		log = "[GetDateText]: [This.GetName]: league_of_nations_events13.EVTOPT2 executed"
		ai_chance = {
			factor = 0.25

			modifier = {
				is_major = yes
				factor = 3
			}
			modifier = {
				is_faction_leader = yes
				factor = 3
			}
			modifier = {
				NOT = { has_government = FROM }
				NOT = { has_government = neutrality }
				factor = 10
			}
			modifier = {
				OR = {
					num_of_military_factories > 125
					num_of_civilian_factories > 175
					has_army_manpower = {
						size > 949999
					}
				}
				factor = 3
			}
			modifier = {
				is_subject = yes
				NOT = { is_subject_of = FROM }
				factor = 10
			}
		}

		FROM = {
			add_opinion_modifier = {
				target = ROOT
				modifier = rejected_league_of_nations_one_nation
			}
			create_wargoal = {
				type = puppet_wargoal_focus
				target = ROOT
			}
		}
	}
}

# League of Nations: AI Election
country_event = {
	id = league_of_nations_events.14
	title = league_of_nations_events.EVTNAME14
	desc = league_of_nations_events.EVTDESC14
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_league_of_nations_AI_election_targets = yes
		}
	}

	option = {
		name = league_of_nations_events14.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events14.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Add Threat for annexing a state while at peace (triggered via on action to get scopes)
country_event = {
	id = league_of_nations_events.15
	title = league_of_nations_events.EVTNAME15
	desc = league_of_nations_events.EVTDESC15
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_event_target = old_state_owner
		event_target:old_state_owner = {
			exists = yes
		}
	}

	immediate = {
		hidden_effect = {
			set_temp_variable = { threat_value = 3 }
			change_league_of_nations_threat_value = yes
			set_temp_variable = { threat_change = 12 }
			set_league_of_nations_last_threat_static_change = yes
		}
	}

	option = {
		name = league_of_nations_events15.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events15.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Members decide about new membership acceptance
country_event = {
	id = league_of_nations_events.17
	title = league_of_nations_events.EVTNAME17
	desc = league_of_nations_events.EVTDESC17
	picture = GFX_lon_event_picture

	is_triggered_only = yes

	timeout_days = 7

	option = {
		name = league_of_nations_events17.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events17.EVTOPT1 executed"
		ai_chance = {
			base = 60
			modifier = {
				set_temp_variable_to_random = {
					var = ai_temp
					min = 0
					max = 5
					integer = yes
				}
				add = ai_temp
			}
			modifier = {
				event_target:possible_new_lon_member = {
					is_ai = yes
				}
				add = 5
			}
			modifier = {
				OR = {
					event_target:possible_new_lon_member = {
						has_government = ROOT
					}
					AND = {
						is_subject = yes
						OVERLORD = {
							event_target:possible_new_lon_member = {
								has_government = PREV
							}
						}
					}
				}
				add = 30
			}
			modifier = {
				OR = {
					has_government = democratic
					AND = {
						is_subject = yes
						OVERLORD = {
							has_government = democratic
						}
						event_target:possible_new_lon_member = {
							is_ai = yes
						}
					}
				}
				event_target:possible_new_lon_member = {
					has_government = ROOT
				}
				add = 15
			}
			modifier = {
				set_temp_variable = { ai_temp = opinion@ROOT }
				if = {
					limit = {
						check_variable = { ai_temp > 0 }
					}
					divide_temp_variable = { ai_temp = 10 }
				}
				round_temp_variable = ai_temp
				check_variable = { ai_temp > 0 }
				add = ai_temp
			}
		}

		hidden_effect = {
			event_target:possible_new_lon_member = {
				add_to_variable = { global.votes_for_lon_membership_of_@THIS = 1 }
			}
		}
	}

	option = {
		name = league_of_nations_events17.EVTOPT2
		log = "[GetDateText]: [This.GetName]: league_of_nations_events17.EVTOPT2 executed"
		ai_chance = {
			base = 40
			modifier = {
				set_temp_variable_to_random = {
					var = ai_temp
					min = 0
					max = 5
					integer = yes
				}
				add = ai_temp
			}
			modifier = {
				has_government = neutrality
				add = 5
			}
			modifier = {
				OR = {
					has_government = fascism
					has_government = communism
				}
				event_target:possible_new_lon_member = {
					NOT = { has_government = ROOT }
				}
				add = 50
			}
			modifier = {
				has_government = neutrality
				event_target:possible_new_lon_member = {
					NOT = { has_government = ROOT }
					OR = {
						has_government = fascism
						has_government = communism
					}
				}
				add = 10
			}
			modifier = {
				NOT = { has_government = neutrality }
				event_target:possible_new_lon_member = {
					NOT = { has_government = ROOT }
					OR = {
						has_government = fascism
						has_government = communism
					}
				}
				add = 20
			}
			modifier = {
				set_temp_variable = { ai_temp = opinion@ROOT }
				round_temp_variable = ai_temp
				check_variable = { ai_temp < 0 }
				multiply_temp_variable = { ai_temp = -1 }
				add = ai_temp
			}
		}

		hidden_effect = {
			event_target:possible_new_lon_member = {
				add_to_variable = { global.votes_against_lon_membership_of_@THIS = 1 }
			}
		}
	}
}

# Members decided about new membership
country_event = {
	id = league_of_nations_events.18
	title = league_of_nations_events.EVTNAME18
	desc = league_of_nations_events.EVTDESC18
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			event_target:possible_new_lon_member = {
				set_temp_variable = { votes_for_lon_membership_temp = global.votes_for_lon_membership_of_@THIS }
				set_temp_variable = { votes_against_lon_membership_temp = global.votes_against_lon_membership_of_@THIS }
				if = {
					limit = {
						check_variable = { global.votes_for_lon_membership_of_@THIS > global.votes_against_lon_membership_of_@THIS }
					}
					add_to_league_of_nations = yes
					news_event = { id = league_of_nations_news_events.5 }
				}
				else = {
					news_event = { id = league_of_nations_news_events.18 }
				}
				clear_variable = global.votes_for_lon_membership_of_@THIS
				clear_variable = global.votes_against_lon_membership_of_@THIS
			}
		}
	}

	option = {
		name = league_of_nations_events18.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events18.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}

# Save event target for membership application
country_event = {
	id = league_of_nations_events.19
	title = league_of_nations_events.EVTNAME19
	desc = league_of_nations_events.EVTDESC19
	picture = GFX_lon_event_picture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = possible_new_lon_member
			var:global.league_of_nations_leader = {
				country_event = { id = league_of_nations_events.16 }
			}
		}
	}

	option = {
		name = league_of_nations_events19.EVTOPT1
		log = "[GetDateText]: [This.GetName]: league_of_nations_events19.EVTOPT1 executed"
		ai_chance = { factor = 100 }
	}
}